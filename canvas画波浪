<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <title>波浪效果</title>
    <style>
        #canvas { border: 1px solid #aaaaaa; display: block; margin: 50px auto; }
    </style>
</head>
<body>
<div id="canvas-warp">
    <canvas id="canvas" style="border: none">
       
    </canvas>
    <!--<canvas id="canvas1">-->

    <!--</canvas>-->
</div>
<script>

var canvas = document.getElementById('canvas');
var ctx = canvas.getContext('2d');
 
//画布属性
var mW = canvas.width = 700;
var mH = canvas.height = 50;
var lineWidth = 1;
 
 
//Sin 曲线属性
var sX = 0;
var sY = mH / 2;
var axisLength = mW; //轴长
var waveWidth = 0.009 ; //波浪宽度,数越小越宽
var waveHeight = 23; //波浪高度,数越大越高
 
ctx.lineWidth = lineWidth;

//画sin 曲线函数
var drawSin = function(xOffset){
    ctx.save();

    var points=[]; //用于存放绘制Sin曲线的点

    ctx.beginPath();
    ctx.fillStyle = '#ff7b3f';
    //在整个轴长上取点
    for(var x = sX; x < sX + axisLength; x += 20 / axisLength){
        //此处坐标(x,y)的取点，依靠公式 “振幅高*sin(x*振幅宽 + 振幅偏移量)”
        var y = -Math.sin((sX + x) * waveWidth  + xOffset);


        points.push([x, sY + y * waveHeight]);
        ctx.lineTo(x, sY + y * waveHeight);
    }

    //封闭路径
    ctx.lineTo(axisLength, mH);
    ctx.lineTo(sX, mH);
    ctx.lineTo(points[0][0],points[0][1]);
    ctx.stroke()
    ctx.fillStyle = '#ff7b3f';
    ctx.fill();
    ctx.restore();
};
var drawCos = function(xOffset){
    ctx.save();

    var points=[]; //用于存放绘制Sin曲线的点

    ctx.beginPath();
    ctx.fillStyle = '#ffd2bf';
    //在整个轴长上取点
    for(var x = sX; x < sX + axisLength; x += 20 / axisLength){
        //此处坐标(x,y)的取点，依靠公式 “振幅高*sin(x*振幅宽 + 振幅偏移量)”
        var y = -Math.cos((sX + x) * waveWidth + Math.PI + xOffset);


        points.push([x, sY + y * waveHeight]);
        ctx.lineTo(x, sY + y * waveHeight);
    }

    //封闭路径
    ctx.lineTo(axisLength, mH);
    ctx.lineTo(sX, mH);
    ctx.lineTo(points[0][0],points[0][1]);
    ctx.stroke()
    ctx.fillStyle = '#ffd2bf';
    ctx.fill();
    ctx.restore();
};
var speed = 0.02; //波浪速度，数越大速度越快
var xOffset = 0; //波浪x偏移量
var render = function(){
    ctx.clearRect(0, 0, mW, mH);

    drawSin(xOffset);
    drawCos(-xOffset)
    xOffset += speed; //形成动态效果
    requestAnimationFrame(render);
}
render()
//drawSin()
////drawCos()


</script>
